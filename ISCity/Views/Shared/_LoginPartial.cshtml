
@if (Request.IsAuthenticated)
{

    ISCity.Models.DBISCityEntities dbEnt = new ISCity.Models.DBISCityEntities();
    var _acc = (from a in dbEnt.Accounts where a.Users.Email==User.Identity.Name select a.Users).FirstOrDefault();

    var userRoles = from r in dbEnt.UserRoles
                    where r.user_id == _acc.id
                    select r.Roles.Name;

    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            <li><a>Здравствуйте, @_acc.SecondName.</a></li>
            @if (userRoles.Contains("Admin"))
            {
                <li>
                    @Html.ActionLink("Панель администратора", "Index", "Admin", routeValues: null, htmlAttributes: new { title = "Manage" })
                </li>
            }
            @if (userRoles.Contains("Organization"))
            {
                <li>
                    @Html.ActionLink("Панель организации", "Index", "Organization", routeValues: null, htmlAttributes: new { title = "Manage" })
                </li>
            }
            @if (userRoles.Contains("User"))
            {
                <li>
                    @Html.ActionLink("Личный кабинет", "Index", "User", routeValues: null, htmlAttributes: new { title = "Manage" })
                </li>
            }
            <li><a href="javascript:document.getElementById('logoutForm').submit()">Выйти</a></li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("Регистрация", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Выполнить вход", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
